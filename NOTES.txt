Requirements
============
* R (ideally R >= 3.4)
* python 3.x

Set up interactive R environment
================================
Commands to run on RCC cluster:
  sinteractive --partition=broadwl --mem=16G --cpus-per-task=8 \
    --time=2:00:00
  echo $HOSTNAME         // Make note of this.
  cd code
  module load R/3.4.3
  R --no-save
Check your R environment:
  version$version.string // Hopefully >= 3.4.0
  getwd()                // Should be .../code

Set up htop
===========
+ Connect to midway2.
+ ssh $HOSTNAME, where $HOSTNAME was identified above.
+ Copy extras/htoprc to hidden directory ~/.config/htop/
+ Run: htop --user=<cnetid>
+ Useful keystrokes:
    - M to sort processes by memory.
    - p to toggle program paths.
    - H to toggle threads (for monitoring multithreaded computing).

First demo
==========
+ This can be done either on the RCC cluster or on your laptop. But it
  is better to do on the cluster.
+ Generate a genotype data matrix with 1000 samples, 300,000 SNPs and
1% missing genotypes:
    source("functions.R")
    geno <- sim.geno(n = 1e3,p = 3e5,na.rate = 0.01)
    dim(geno)
    range(geno,na.rm = TRUE)
    summary(colMeans(geno,na.rm = TRUE)/2)
    mean(is.na(geno))
    save(list = "geno",file = "../data/geno.RData")
+ Quit R.
+ Compute and summarize the minor allele frequencies:
    export MEM_CHECK_INTERVAL=0.01
    ./monitor_memory.py Rscript summarize.maf.R
+ Center and scale the genotype matrix using "scale" function:
    ./monitor_memory.py Rscript scale.geno.R
+ Center and scale the genotype matrix using my "scale_better" function:
    ./monitor_memory.py Rscript scale.geno.better.R
+ Center and scale the genotype matrix without calling a function:
    ./monitor_memory.py Rscript scale.geno.even.better.R
+ Center and scale the genotype matrix in place using Rcpp:
    ./monitor_memory.py Rscript scale.geno.best.R


